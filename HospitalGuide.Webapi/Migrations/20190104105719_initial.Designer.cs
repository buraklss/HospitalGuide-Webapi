// <auto-generated />
using HospitalGuide.Webapi.Data.Concrete.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace HospitalGuide.Webapi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190104105719_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HospitalGuide.Webapi.Entities.AppointmentDays", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<int>("DoctorId");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.ToTable("AppointmentDays");
                });

            modelBuilder.Entity("HospitalGuide.Webapi.Entities.AppointmentHours", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DayId");

                    b.Property<bool>("Status");

                    b.Property<DateTime>("Time");

                    b.HasKey("Id");

                    b.HasIndex("DayId");

                    b.ToTable("AppointmentHours");
                });

            modelBuilder.Entity("HospitalGuide.Webapi.Entities.Citiess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Country");

                    b.Property<string>("Name");

                    b.Property<string>("Routerlink");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("HospitalGuide.Webapi.Entities.Clinics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Clinics");
                });

            modelBuilder.Entity("HospitalGuide.Webapi.Entities.Comments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime?>("CommentTime");

                    b.Property<int>("HospitalId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("HospitalId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("HospitalGuide.Webapi.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FlagUrl");

                    b.Property<string>("Flagimage");

                    b.Property<string>("Name");

                    b.Property<string>("Routerlink");

                    b.HasKey("Id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("HospitalGuide.Webapi.Entities.Doctors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Gender");

                    b.Property<int>("HospitalClinicId");

                    b.Property<string>("Name");

                    b.Property<string>("Surname");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("HospitalClinicId");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("HospitalGuide.Webapi.Entities.HospitalClinics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ClinicId");

                    b.Property<int>("HospitalId");

                    b.HasKey("Id");

                    b.HasIndex("ClinicId");

                    b.HasIndex("HospitalId");

                    b.ToTable("HospitalClinics");
                });

            modelBuilder.Entity("HospitalGuide.Webapi.Entities.Hospitals", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<string>("District");

                    b.Property<string>("Location");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.HasKey("Id");

                    b.ToTable("Hospitals");
                });

            modelBuilder.Entity("HospitalGuide.Webapi.Entities.Randevular", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("HourId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("HourId");

                    b.HasIndex("UserId");

                    b.ToTable("Randevular");
                });

            modelBuilder.Entity("HospitalGuide.Webapi.Entities.Rates", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("HospitalId");

                    b.Property<int?>("Star1");

                    b.Property<int?>("Star2");

                    b.Property<int?>("Star3");

                    b.Property<int?>("Star4");

                    b.Property<int?>("Star5");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("HospitalId")
                        .IsUnique();

                    b.ToTable("Rates");
                });

            modelBuilder.Entity("HospitalGuide.Webapi.Entities.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Citizenship");

                    b.Property<string>("Gender");

                    b.Property<string>("Mail");

                    b.Property<string>("Name");

                    b.Property<string>("PassId");

                    b.Property<byte[]>("Passwordencoder");

                    b.Property<byte[]>("Passwordhash");

                    b.Property<int>("Phone");

                    b.Property<string>("Surname");

                    b.HasKey("Id");

                    b.ToTable("UserInfo");
                });

            modelBuilder.Entity("HospitalGuide.Webapi.Entities.AppointmentDays", b =>
                {
                    b.HasOne("HospitalGuide.Webapi.Entities.Doctors", "Doctor")
                        .WithMany("AppointmentDays")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HospitalGuide.Webapi.Entities.AppointmentHours", b =>
                {
                    b.HasOne("HospitalGuide.Webapi.Entities.AppointmentDays", "Day")
                        .WithMany("AppointmentHours")
                        .HasForeignKey("DayId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HospitalGuide.Webapi.Entities.Comments", b =>
                {
                    b.HasOne("HospitalGuide.Webapi.Entities.Hospitals", "Hospital")
                        .WithMany("Comments")
                        .HasForeignKey("HospitalId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HospitalGuide.Webapi.Entities.UserInfo", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HospitalGuide.Webapi.Entities.Doctors", b =>
                {
                    b.HasOne("HospitalGuide.Webapi.Entities.HospitalClinics", "HospitalClinic")
                        .WithMany("Doctors")
                        .HasForeignKey("HospitalClinicId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HospitalGuide.Webapi.Entities.HospitalClinics", b =>
                {
                    b.HasOne("HospitalGuide.Webapi.Entities.Clinics", "Clinic")
                        .WithMany("HospitalClinics")
                        .HasForeignKey("ClinicId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HospitalGuide.Webapi.Entities.Hospitals", "Hospital")
                        .WithMany("HospitalClinics")
                        .HasForeignKey("HospitalId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HospitalGuide.Webapi.Entities.Randevular", b =>
                {
                    b.HasOne("HospitalGuide.Webapi.Entities.AppointmentHours", "Hour")
                        .WithMany("Randevular")
                        .HasForeignKey("HourId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HospitalGuide.Webapi.Entities.UserInfo", "User")
                        .WithMany("Randevular")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HospitalGuide.Webapi.Entities.Rates", b =>
                {
                    b.HasOne("HospitalGuide.Webapi.Entities.Hospitals", "Hospital")
                        .WithOne("Rate")
                        .HasForeignKey("HospitalGuide.Webapi.Entities.Rates", "HospitalId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
